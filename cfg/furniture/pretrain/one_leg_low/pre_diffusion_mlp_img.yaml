defaults:
  - _self_
hydra:
  run:
    dir: ${logdir}
_target_: agent.pretrain.train_diffusion_agent.TrainDiffusionAgent

name: ${env}_pre_diffusion_mlp_img_ta${horizon_steps}_td${denoising_steps}
logdir: ${oc.env:DPPO_LOG_DIR}/furniture-pretrain/${name}/${now:%Y-%m-%d}_${now:%H-%M-%S}_${seed}
train_dataset_path: /home/zcai/jh_workspace/1/dppo/furniture-bench/teleop_sim_demo/one_leg_processed/dppo_processed_normalized_img/train.npz #${oc.env:DPPO_DATA_DIR}/furniture/${task}_${randomness}/train.npz

seed: 42
device: cuda:0
task: one_leg
randomness: low
env: ${task}_${randomness}_dim
obs_dim: 14 #58  modified 10.24 data with image version
action_dim: 8 #10 modified 10.24 data with self collected data img version
denoising_steps: 100
horizon_steps: 8
cond_steps: 1
img_cond_steps: 1 #added for img version

wandb:
  entity: ${oc.env:DPPO_WANDB_ENTITY}
  project: furniture-${task}-${randomness}-pretrain
  run: ${now:%H-%M-%S}_${name}

shape_meta:
  obs:
    color_image1: #rgb:
      shape: [3, 224, 224]
    color_image2: #rgb:
      shape: [3, 224, 224]
    robot_state:
      shape: [14]
  actions: 
    shape: [8]

train:
  n_epochs: 5000 #8000
  batch_size: 256
  learning_rate: 1e-4
  weight_decay: 1e-6
  lr_scheduler:
    first_cycle_steps: 5000 #10000
    warmup_steps: 100
    min_lr: 1e-5
  epoch_start_ema: 20
  update_ema_freq: 10
  save_model_freq: 500 #1000
  resume: true #added 11.1

model:
  _target_: model.diffusion.diffusion.DiffusionModel
  predict_epsilon: True
  denoised_clip_value: 1.0
  network:
    #_target_: model.diffusion.mlp_diffusion.DiffusionMLP
    #time_dim: 32
    mlp_dims: [1024, 1024, 1024, 1024, 1024, 1024, 1024]
    #cond_mlp_dims: [512, 64]
    use_layernorm: True # needed for larger MLP
    #residual_style: True
    #cond_dim: ${eval:'${obs_dim} * ${cond_steps}'}
    #horizon_steps: ${horizon_steps}
    #action_dim: ${action_dim}
  #horizon_steps: ${horizon_steps}
  #obs_dim: ${obs_dim}
  #action_dim: ${action_dim}
  #denoising_steps: ${denoising_steps}
  #device: ${device}
    _target_: model.diffusion.mlp_diffusion.VisionDiffusionMLP
    backbone:
      _target_: model.common.vit.VitEncoder
      obs_shape: ${shape_meta.obs.color_image1.shape} #rgb.shape}
      num_channel: ${eval:'${shape_meta.obs.color_image1.shape[0]} * ${img_cond_steps}'} #rgb.shape[0]} * ${img_cond_steps}'} # each image patch is history concatenated
      cfg:
        patch_size: 8
        depth: 1
        embed_dim: 128
        num_heads: 4
        embed_style: embed2
        embed_norm: 0
      img_h: 224
      img_w: 224
    img_cond_steps: ${img_cond_steps}
    augment: True
    spatial_emb: 128
    time_dim: 32
    #mlp_dims: [512, 512, 512]
    num_img: 2
    residual_style: True
    cond_dim: ${eval:'${obs_dim} * ${cond_steps}'}
    horizon_steps: ${horizon_steps}
    action_dim: ${action_dim}
  horizon_steps: ${horizon_steps}
  obs_dim: ${obs_dim}
  action_dim: ${action_dim}
  denoising_steps: ${denoising_steps}
  device: ${device}
ema:
  decay: 0.995

# train_dataset:
#   _target_: agent.dataset.sequence.StitchedSequenceDataset
#   dataset_path: ${train_dataset_path}
#   horizon_steps: ${horizon_steps}
#   cond_steps: ${cond_steps}
#   device: ${device}

train_dataset:
  _target_: agent.dataset.sequence.StitchedSequenceDataset
  use_img: True
  dataset_path: ${train_dataset_path}
  horizon_steps: ${horizon_steps}
  max_n_episodes: 100
  cond_steps: ${cond_steps}
  img_cond_steps: ${img_cond_steps}
  device: ${device}
